name: Rust

on:
  push:
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check-formatting:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      # TODO: Create matrix for --manifest-path once we have frontend crates
      - name: Check format
        run: cargo fmt --manifest-path api/Cargo.toml --check
        
  ubuntu-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --manifest-path api/Cargo.toml --verbose
      
  windows-build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --manifest-path api/Cargo.toml --verbose

  check-releasable:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          dry-run: true
          manifest-path: api/Cargo.toml
          bin: downloader
          target: ${{ matrix.target }}
